class Solution {
public:
    int largestRectangleArea(vector<int>& heights) {
          int n=heights.size();
        vector<int>lb,rb;
        stack<int>s;
        s.push(0);
        rb.push_back(-1);
        for(int i=1;i<heights.size();i++){
            while(!s.empty() && heights[i]<=heights[s.top()]){
                s.pop();
            }
            if(s.size()==0){
                rb.push_back(-1);
            }
            else{
                rb.push_back(s.top());
            }
            s.push(i);
        }
       while(!s.empty()){
           s.pop();
       }
        s.push(heights.size()-1);
       lb.push_back(heights.size());
         for(int i=heights.size()-2;i>=0;i--){
            while(s.size()>0 && heights[i]<=heights[s.top()]){
                s.pop();
            }
            if(s.size()==0){
              lb.push_back(heights.size());
            }
            else{
                lb.push_back(s.top());
            }
            s.push(i);
             
        }
        reverse(lb.begin(),lb.end());
         int maxarea=0;
       for(int i=0;i<heights.size();i++){
           int width=lb[i]-rb[i]-1;
           int area=heights[i]*width;
           maxarea=max(area,maxarea);
       }
            
        return maxarea;
    }
};
