
class Solution {
public:
ListNode* reverse(ListNode* head){
    if(head==NULL || head->next==NULL){
        return head;
    }
    ListNode* newnode=reverse(head->next);
    head->next->next=head;
    head->next=NULL;
    return newnode;
}
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
       l1= reverse(l1);
       l2=reverse(l2);
        int carry=0;
        ListNode* head=new ListNode();
        ListNode* temp=head;
        while(l1!=NULL || l2!=NULL || carry){
            int sum=0;
            if(l1!=NULL){
           sum+=l1->val;
           l1=l1->next;
            }
            if(l2!=NULL){
                sum+=l2->val;
                l2=l2->next;
            }
            sum+=carry;
            ListNode* node= new ListNode(sum%10);
            carry=sum/10;
            temp->next=node;
            temp=temp->next;

        }
        return reverse(head->next);
        
    }
};
